services:
  transcriber-secure:
    image: transcribo-secure:latest
    container_name: audiotranscription-secure
    build:
      dockerfile: Dockerfile
      context: .
      platforms:
        - linux/amd64
    ports:
      - "8085:8080"
    volumes:
      - hugging_face_cache_secure:/root/.cache/huggingface
      - ./data_secure:/app/data
    environment:
      # BASE_PATH env var removed - serving directly at root
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # Router configuration - simplified to match only hostname
      - "traefik.http.routers.audiotranscription-secure.rule=Host(`sp000200-t6.kt.ktzh.ch`)"
      - "traefik.http.routers.audiotranscription-secure.entrypoints=websecure"
      - "traefik.http.routers.audiotranscription-secure.middlewares=audiotranscription-secure-auth"
      - "traefik.http.routers.audiotranscription-secure.tls=true"
      
      # Service configuration
      - "traefik.http.services.audiotranscription-secure.loadbalancer.server.port=8080"
      # Priority not needed with simplified rule
      
      # Basic Auth middleware - username/password (default: admin/password)
      - "traefik.http.middlewares.audiotranscription-secure-auth.basicauth.users=Transkription:$$2a$$12$$BM51tWbRy.6cS7GXLUyWZ.iC1kuD5Xr39EG823KwStaXUsHNOsY9O"
    networks:
      - traefik_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: ["gpu"]
    restart: unless-stopped

  # Monitoring services - keep these at /prometheus and /grafana paths
  prometheus-secure:
    image: prom/prometheus:latest
    container_name: prometheus-secure
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_secure:/prometheus
    ports:
      - "9095:9090"
    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus-secure.rule=Host(`sp000200-t6.kt.ktzh.ch`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-secure.middlewares=prometheus-secure-strip,audiotranscription-secure-auth"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.middlewares.prometheus-secure-strip.stripprefix.prefixes=/prometheus"
      - "traefik.http.services.prometheus-secure.loadbalancer.server.port=9090"

  grafana-secure:
    image: grafana/grafana:latest
    container_name: grafana-secure
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data_secure:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_BASIC_ENABLED=false
      - GF_USERS_ALLOW_SIGN_UP=false
      # Updated Grafana base URL configuration
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - "3005:3000"
    depends_on:
      - prometheus-secure
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-secure.rule=Host(`sp000200-t6.kt.ktzh.ch`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.middlewares=grafana-secure-strip,audiotranscription-secure-auth"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.middlewares.grafana-secure-strip.stripprefix.prefixes=/grafana"
      - "traefik.http.services.grafana-secure.loadbalancer.server.port=3000"
    restart: unless-stopped

volumes:
  hugging_face_cache_secure:
  prometheus_data_secure:
  grafana_data_secure:

networks:
  traefik_network:
    external: true
